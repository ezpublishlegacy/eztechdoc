#. `eZ Publish Platform 5.x <index.html>`__
#. `eZ Publish Platform
   Documentation <eZ-Publish-Platform-Documentation_1114149.html>`__
#. `Reference <Reference_10158191.html>`__
#. `FieldTypes reference <FieldTypes-reference_10158198.html>`__

eZ Publish Platform 5.x : The Integer FieldType
===============================================

Created by ricardo.correia@ez.no, last modified by petar.spanja@ez.no on
May 23, 2014

This field type represents an integer value.

Name

Internal name

Expected input

``Integer``

``ezinteger``

``integer``

**Table of contents:**

-  `Description <#TheIntegerFieldType-Description>`__
-  `Input expectations <#TheIntegerFieldType-Inputexpectations>`__
-  `Value object <#TheIntegerFieldType-Valueobject>`__

   -  `Properties <#TheIntegerFieldType-Properties>`__
   -  `Constructor <#TheIntegerFieldType-Constructor>`__
   -  `Hash format <#TheIntegerFieldType-Hashformat>`__
   -  `String
      representation <#TheIntegerFieldType-Stringrepresentation>`__

-  `Validation <#TheIntegerFieldType-Validation>`__
-  `Settings <#TheIntegerFieldType-Settings>`__

Description
-----------

--------------

This FieldType stores numeric values which will be provided as integers.

Input expectations
------------------

--------------

Type

Example

``integer``

``2397``

Value object
------------

--------------

Properties
~~~~~~~~~~

The Value class of this field type contains the following properties:

Property

Type

Description

``$value``

``int``

This property will be used to store the value provided as an integer.

**Value object content example**

.. code:: theme:

    $integer->value = 8

Constructor
~~~~~~~~~~~

The \ ``Integer``\ ``\Value`` constructor will initialize a new Value
object with the value provided. It expects a numeric, integer value.

**Constructor example**

.. code:: theme:

    use eZ\Publish\Core\FieldType\Integer;
     
    // Instantiates a Integer Value object
    $integerValue = new Integer\Value( 8 );

Hash format
~~~~~~~~~~~

Hash value of this FieldType is simply integer value as a string.

Example:

    ``"8"``

String representation
~~~~~~~~~~~~~~~~~~~~~

String representation of the FieldType's value will return the integer
value as a string.

Example:

    ``"8"``

Validation
----------

--------------

This FieldType supports \ ``IntegerValueValidator``, defining maximal
and minimal float value:

Name

Type

Default value

Description

``minIntegerValue``

``int``

``0``

This setting defines the minimum value this FieldType will allow as
input.

``maxIntegerValue``

``int``

``false``

This setting defines the maximum value this FieldType will allow as
input.

**Example of validator configuration in PHP**

.. code:: theme:

    $validatorConfiguration = array(
        "minIntegerValue" => 1,
        "maxIntegerValue" => 24
    );

Settings
--------

--------------

This FieldType does not support settings.

 

Document generated by Confluence on Mar 03, 2015 15:13
