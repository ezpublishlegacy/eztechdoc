#. `eZ Publish Platform 5.x <index.html>`__
#. `eZ Publish Platform
   Documentation <eZ-Publish-Platform-Documentation_1114149.html>`__
#. `Installation and Upgrade
   Guides <Installation-and-Upgrade-Guides_6292016.html>`__
#. `Installation <Installation_7438500.html>`__

eZ Publish Platform 5.x : Using environments
============================================

Created by yannick.roger@ez.no on May 20, 2014

| Environment configuration as provided by Symfony was enhanced as of eZ
Publish 5.2 and eZ Publish Community Project 2013.06 to allow specifying
this in the virtual host configuration.
| You can configure several environments, from production, development
or staging, even if for each one of them you need require using
different configurations sets.

Web server configuration
========================

For example, using apache, in the ``VirtualHost`` example in the
`Virtual host setup <Virtual-host-setup_7438507.html>`__ chapter the
required ``VirtualHost`` configurations have been already included. You
can switch to the desired environment by setting the ``ENVIRONMENT``
environment variable to "``prod``\ ", "``dev``\ " or other custom value,
as you can see in the following example:

::

        # Environment.
        # Possible values: "prod" and "dev" out-of-the-box, other values possible with proper configuration (described below)
        # Defaults to "prod" if omitted
        SetEnv ENVIRONMENT "prod"

eZ Publish Configuration
========================

If you want to use a custom environment (something else then
"``prod``\ " and "``dev``\ ") the next step is to create the dedicated
configuration files for your environment:

-  ``ezpublish/config/config_<env_name>.yml``
-  ``ezpublish/config/ezpublish_<env_name>.yml``

The name used as ``<env_name>`` will be the one that can be used as
value of the ``ENVIRONMENT`` environment variable.

Those files must import the main configuration file, just like the
defaultÂ \ ```config_dev.yml`` <https://github.com/ezsystems/ezpublish-community/blob/master/ezpublish/config/config_dev.yml>`__
already does. Here's an example:

::

    imports:
        - { resource: config.yml }

This allows you to override settings defined in the main configuration
file, depending on your environment (like the DB settings or any other
setting you may want to override).

Document generated by Confluence on Mar 03, 2015 15:12
