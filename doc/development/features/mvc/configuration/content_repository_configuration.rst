#. `eZ Publish Platform 5.x <index.html>`__
#. `eZ Publish Platform
   Documentation <eZ-Publish-Platform-Documentation_1114149.html>`__
#. `Development & Administration Guides <6291674.html>`__
#. `Features <Features_12781009.html>`__
#. `MVC and Application <MVC-and-Application_2719826.html>`__
#. `Configuration <Configuration_2720538.html>`__

eZ Publish Platform 5.x : Content Repository configuration
==========================================================

Created and last modified by jerome.vieilledent@ez.no on Mar 17, 2014

-  `Configuration
   examples <#ContentRepositoryconfiguration-Configurationexamples>`__

   -  `Using default
      values <#ContentRepositoryconfiguration-Usingdefaultvalues>`__
   -  `All explicit <#ContentRepositoryconfiguration-Allexplicit>`__
   -  `Legacy storage
      engine <#ContentRepositoryconfiguration-Legacystorageengine>`__

The **content repository** is where all your content is been stored. It
is the heart of eZ Publish which you interact with using Public API.

To store data, the content repository **uses a storage engine**, that
can virtually can work with any kind of storage (RDBMS, NoSQL...). eZ
Publish 5 comes with a relational storage engine, compatible with v4.x:
the **Legacy storage engine**, which is the default.

You can define several repositories within a single application.
However, you can only use one per site.

Version compatibility

Icon

Following configuration examples are compatible with \ **eZ Publish 5.3
/ 2014.03**

Configuration examples
----------------------

Using default values
~~~~~~~~~~~~~~~~~~~~

**ezpublish.yml**

.. code:: theme:

    ezpublish:
        repositories:
            # Defining repository with alias "main"
            # Default storage engine is used, with default connection
            # Equals to:
            # main: { engine: legacy, connection: <defaultConnectionName> }
            main: ~

        system:
            # All members of my_siteaccess_group will use "main" repository
            # No need to set "repository", it will take the first defined repository by default
            my_siteaccess_group:
                # ...

Icon

If no repository is specified for a siteaccess or siteaccess group, the
first defined repository (under ``ezpublish.repositories``) will be
used.

All explicit
~~~~~~~~~~~~

**ezpublish.yml**

.. code:: theme:

    doctrine:
        dbal:
            default_connection: my_connection_name
            connections:
                my_connection_name:
                    driver:   pdo_mysql
                    host:     localhost
                    port:     3306
                    dbname:   my_database
                    user:     my_user
                    password: my_password
                    charset:  UTF8

                another_connection_name:
                    # ...

    ezpublish:
        repositories:
            first_repository: { engine: legacy, connection: my_connection_name, config: {} }
            second_repository: { engine: legacy, connection: another_connection_name, config: {} }

        # ...

        system:
            my_first_siteaccess:
                repository: first_repository

                # ...

            my_second_siteaccess:
                repository: second_repository

Legacy storage engine
~~~~~~~~~~~~~~~~~~~~~

As of eZ Publish 5.3, legacy storage engine uses `Doctrine
DBAL <http://docs.doctrine-project.org/projects/doctrine-dbal/en/latest/>`__
(Database Abstraction Layer). Database settings are supplied by
`DoctrineBundle <https://github.com/doctrine/DoctrineBundle>`__. As
such, you can refer to `DoctrineBundle's
documentation <https://github.com/doctrine/DoctrineBundle/blob/master/Resources/doc/configuration.rst#doctrine-dbal-configuration>`__.

ORM

Icon

Doctrine ORM is **not** provided by default. If you want to use it, you
will need to add ``doctrine/orm`` as a dependency in your
``composer.json``.

| 

 

 

Document generated by Confluence on Mar 03, 2015 15:12
